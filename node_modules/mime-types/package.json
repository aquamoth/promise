{
  "_from": "mime-types@>=2.1.11 <2.2.0",
  "_id": "mime-types@2.1.12",
  "_location": "/mime-types",
  "_nodeVersion": "4.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/mime-types-2.1.12.tgz_1474237415119_0.03028594213537872"
  },
  "_npmUser": {
    "name": "dougwilson",
    "email": "doug@somethingdoug.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requiredBy": [
    "/type-is"
  ],
  "_resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.12.tgz",
  "_shasum": "152ba256777020dd4663f54c2e7bc26381e71729",
  "bugs": {
    "url": "https://github.com/jshttp/mime-types/issues"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Jeremiah Senkpiel",
      "email": "fishrock123@rocketmail.com",
      "url": "https://searchbeam.jit.su"
    },
    {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    }
  ],
  "dependencies": {
    "mime-db": "~1.24.0"
  },
  "description": "The ultimate javascript content-type utility.",
  "devDependencies": {
    "eslint": "3.5.0",
    "eslint-config-standard": "6.0.1",
    "eslint-plugin-promise": "2.0.1",
    "eslint-plugin-standard": "2.0.0",
    "istanbul": "0.4.5",
    "mocha": "1.21.5"
  },
  "directories": {},
  "dist": {
    "shasum": "152ba256777020dd4663f54c2e7bc26381e71729",
    "tarball": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.12.tgz"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "index.js"
  ],
  "gitHead": "7193a9094e2efe31da93988350bb0b32ab18b1ea",
  "homepage": "https://github.com/jshttp/mime-types#readme",
  "keywords": [
    "mime",
    "types"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "dougwilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "fishrock123",
      "email": "fishrock123@rocketmail.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "name": "mime-types",
  "optionalDependencies": {},
  "readme": "# mime-types\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nThe ultimate javascript content-type utility.\r\n\r\nSimilar to [node-mime](https://github.com/broofa/node-mime), except:\r\n\r\n- __No fallbacks.__ Instead of naively returning the first available type, `mime-types` simply returns `false`,\r\n  so do `var type = mime.lookup('unrecognized') || 'application/octet-stream'`.\r\n- No `new Mime()` business, so you could do `var lookup = require('mime-types').lookup`.\r\n- Additional mime types are added such as jade and stylus via [mime-db](https://github.com/jshttp/mime-db)\r\n- No `.define()` functionality\r\n\r\nOtherwise, the API is compatible.\r\n\r\n## Install\r\n\r\n```sh\r\n$ npm install mime-types\r\n```\r\n\r\n## Adding Types\r\n\r\nAll mime types are based on [mime-db](https://github.com/jshttp/mime-db),\r\nso open a PR there if you'd like to add mime types.\r\n\r\n## API\r\n\r\n```js\r\nvar mime = require('mime-types')\r\n```\r\n\r\nAll functions return `false` if input is invalid or not found.\r\n\r\n### mime.lookup(path)\r\n\r\nLookup the content-type associated with a file.\r\n\r\n```js\r\nmime.lookup('json')             // 'application/json'\r\nmime.lookup('.md')              // 'text/x-markdown'\r\nmime.lookup('file.html')        // 'text/html'\r\nmime.lookup('folder/file.js')   // 'application/javascript'\r\nmime.lookup('folder/.htaccess') // false\r\n\r\nmime.lookup('cats') // false\r\n```\r\n\r\n### mime.contentType(type)\r\n\r\nCreate a full content-type header given a content-type or extension.\r\n\r\n```js\r\nmime.contentType('markdown')  // 'text/x-markdown; charset=utf-8'\r\nmime.contentType('file.json') // 'application/json; charset=utf-8'\r\n\r\n// from a full path\r\nmime.contentType(path.extname('/path/to/file.json')) // 'application/json; charset=utf-8'\r\n```\r\n\r\n### mime.extension(type)\r\n\r\nGet the default extension for a content-type.\r\n\r\n```js\r\nmime.extension('application/octet-stream') // 'bin'\r\n```\r\n\r\n### mime.charset(type)\r\n\r\nLookup the implied default charset of a content-type.\r\n\r\n```js\r\nmime.charset('text/x-markdown') // 'UTF-8'\r\n```\r\n\r\n### var type = mime.types[extension]\r\n\r\nA map of content-types by extension.\r\n\r\n### [extensions...] = mime.extensions[type]\r\n\r\nA map of extensions by content-type.\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/mime-types.svg\r\n[npm-url]: https://npmjs.org/package/mime-types\r\n[node-version-image]: https://img.shields.io/node/v/mime-types.svg\r\n[node-version-url]: https://nodejs.org/en/download/\r\n[travis-image]: https://img.shields.io/travis/jshttp/mime-types/master.svg\r\n[travis-url]: https://travis-ci.org/jshttp/mime-types\r\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/mime-types/master.svg\r\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-types\r\n[downloads-image]: https://img.shields.io/npm/dm/mime-types.svg\r\n[downloads-url]: https://npmjs.org/package/mime-types\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/mime-types.git"
  },
  "scripts": {
    "lint": "eslint **/*.js",
    "test": "mocha --reporter spec test/test.js",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot test/test.js",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter dot test/test.js"
  },
  "version": "2.1.12"
}
