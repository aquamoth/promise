{
  "_from": "after@0.8.1",
  "_id": "after@0.8.1",
  "_location": "/after",
  "_npmUser": {
    "name": "raynos",
    "email": "raynos2@gmail.com"
  },
  "_npmVersion": "1.2.25",
  "_phantomChildren": {},
  "_requiredBy": [
    "/engine.io-parser"
  ],
  "_resolved": "https://registry.npmjs.org/after/-/after-0.8.1.tgz",
  "_shasum": "ab5d4fb883f596816d3515f8f791c0af486dd627",
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/Raynos/after/issues"
  },
  "contributors": [
    {
      "name": "Raynos",
      "email": "raynos2@gmail.com",
      "url": "http://raynos.org"
    }
  ],
  "dependencies": {},
  "description": "after - tiny flow control",
  "devDependencies": {
    "mocha": "~1.8.1"
  },
  "directories": {},
  "dist": {
    "shasum": "ab5d4fb883f596816d3515f8f791c0af486dd627",
    "tarball": "https://registry.npmjs.org/after/-/after-0.8.1.tgz"
  },
  "homepage": "https://github.com/Raynos/after#readme",
  "keywords": [
    "flowcontrol",
    "after",
    "flow",
    "control",
    "arch"
  ],
  "maintainers": [
    {
      "name": "raynos",
      "email": "raynos2@gmail.com"
    },
    {
      "name": "shtylman",
      "email": "shtylman@gmail.com"
    }
  ],
  "name": "after",
  "optionalDependencies": {},
  "readme": "# After [![Build Status][1]][2]\r\n\r\nInvoke callback after n calls\r\n\r\n## Status: production ready\r\n\r\n## Example\r\n\r\n    var after = require(\"after\")\r\n        , next = after(3, logItWorks)\r\n\r\n    next()\r\n    next()\r\n    next() // it works\r\n\r\n    function logItWorks() {\r\n        console.log(\"it works!\")\r\n    }\r\n\r\n## Example with error handling\r\n\r\n    var after = require(\"after\")\r\n        , next = after(3, logError)\r\n\r\n    next()\r\n    next(new Error(\"oops\")) // logs oops\r\n    next() // does nothing\r\n\r\n    function logError(err) {\r\n        console.log(err)\r\n    }\r\n\r\n## After < 0.6.0\r\n\r\nOlder versions of after had iterators and flows in them.\r\n\r\nThese have been replaced with seperate modules\r\n\r\n - [iterators][8]\r\n - [composite][9]\r\n\r\n## Installation\r\n\r\n`npm install after`\r\n\r\n## Tests\r\n\r\n`npm test`\r\n\r\n## Blog post\r\n\r\n - [Flow control in node.js][3]\r\n\r\n## Examples :\r\n\r\n - [Determining the end of asynchronous operations][4]\r\n - [In javascript what are best practices for executing multiple asynchronous functions][5]\r\n - [JavaScript performance long running tasks][6]\r\n - [Synchronous database queries with node.js][7]\r\n\r\n## Contributors\r\n\r\n - Raynos\r\n\r\n## MIT Licenced\r\n\r\n  [1]: https://secure.travis-ci.org/Raynos/after.png\r\n  [2]: http://travis-ci.org/Raynos/after\r\n  [3]: http://raynos.org/blog/2/Flow-control-in-node.js\r\n  [4]: http://stackoverflow.com/questions/6852059/determining-the-end-of-asynchronous-operations-javascript/6852307#6852307\r\n  [5]: http://stackoverflow.com/questions/6869872/in-javascript-what-are-best-practices-for-executing-multiple-asynchronous-functi/6870031#6870031\r\n  [6]: http://stackoverflow.com/questions/6864397/javascript-performance-long-running-tasks/6889419#6889419\r\n  [7]: http://stackoverflow.com/questions/6597493/synchronous-database-queries-with-node-js/6620091#6620091\r\n  [8]: http://github.com/Raynos/iterators\r\n  [9]: http://github.com/Raynos/composite\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/after.git"
  },
  "scripts": {
    "test": "mocha --ui tdd --reporter spec test/*.js"
  },
  "version": "0.8.1"
}
