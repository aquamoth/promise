{
  "_from": "mime-db@>=1.24.0 <1.25.0",
  "_id": "mime-db@1.24.0",
  "_location": "/mime-db",
  "_nodeVersion": "4.5.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/mime-db-1.24.0.tgz_1474198792761_0.7161959335207939"
  },
  "_npmUser": {
    "name": "dougwilson",
    "email": "doug@somethingdoug.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requiredBy": [
    "/mime-types"
  ],
  "_resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.24.0.tgz",
  "_shasum": "e2d13f939f0016c6e4e9ad25a8652f126c467f0c",
  "bugs": {
    "url": "https://github.com/jshttp/mime-db/issues"
  },
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "Jonathan Ong",
      "email": "me@jongleberry.com",
      "url": "http://jongleberry.com"
    },
    {
      "name": "Robert Kieffer",
      "email": "robert@broofa.com",
      "url": "http://github.com/broofa"
    }
  ],
  "dependencies": {},
  "description": "Media Type Database",
  "devDependencies": {
    "bluebird": "3.4.6",
    "co": "4.6.0",
    "cogent": "1.0.1",
    "csv-parse": "1.1.7",
    "gnode": "0.1.2",
    "istanbul": "0.4.5",
    "mocha": "1.21.5",
    "raw-body": "2.1.7",
    "stream-to-array": "2.3.0"
  },
  "directories": {},
  "dist": {
    "shasum": "e2d13f939f0016c6e4e9ad25a8652f126c467f0c",
    "tarball": "https://registry.npmjs.org/mime-db/-/mime-db-1.24.0.tgz"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "HISTORY.md",
    "LICENSE",
    "README.md",
    "db.json",
    "index.js"
  ],
  "gitHead": "9dd00b34556a8cdd6f3385f09d4989298c4b86e1",
  "homepage": "https://github.com/jshttp/mime-db#readme",
  "keywords": [
    "mime",
    "db",
    "type",
    "types",
    "database",
    "charset",
    "charsets"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "dougwilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "name": "mime-db",
  "optionalDependencies": {},
  "readme": "# mime-db\r\n\r\n[![NPM Version][npm-version-image]][npm-url]\r\n[![NPM Downloads][npm-downloads-image]][npm-url]\r\n[![Node.js Version][node-image]][node-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Coverage Status][coveralls-image]][coveralls-url]\r\n\r\nThis is a database of all mime types.\r\nIt consists of a single, public JSON file and does not include any logic,\r\nallowing it to remain as un-opinionated as possible with an API.\r\nIt aggregates data from the following sources:\r\n\r\n- http://www.iana.org/assignments/media-types/media-types.xhtml\r\n- http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\r\n- http://hg.nginx.org/nginx/raw-file/default/conf/mime.types\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install mime-db\r\n```\r\n\r\n### Database Download\r\n\r\nIf you're crazy enough to use this in the browser, you can just grab the\r\nJSON file using [RawGit](https://rawgit.com/). It is recommended to replace\r\n`master` with [a release tag](https://github.com/jshttp/mime-db/tags) as the\r\nJSON format may change in the future.\r\n\r\n```\r\nhttps://cdn.rawgit.com/jshttp/mime-db/master/db.json\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar db = require('mime-db');\r\n\r\n// grab data on .js files\r\nvar data = db['application/javascript'];\r\n```\r\n\r\n## Data Structure\r\n\r\nThe JSON file is a map lookup for lowercased mime types.\r\nEach mime type has the following properties:\r\n\r\n- `.source` - where the mime type is defined.\r\n    If not set, it's probably a custom media type.\r\n    - `apache` - [Apache common media types](http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types)\r\n    - `iana` - [IANA-defined media types](http://www.iana.org/assignments/media-types/media-types.xhtml)\r\n    - `nginx` - [nginx media types](http://hg.nginx.org/nginx/raw-file/default/conf/mime.types)\r\n- `.extensions[]` - known extensions associated with this mime type.\r\n- `.compressible` - whether a file of this type can be gzipped.\r\n- `.charset` - the default charset associated with this type, if any.\r\n\r\nIf unknown, every property could be `undefined`.\r\n\r\n## Contributing\r\n\r\nTo edit the database, only make PRs against `src/custom.json` or\r\n`src/custom-suffix.json`.\r\n\r\nTo update the build, run `npm run build`.\r\n\r\n## Adding Custom Media Types\r\n\r\nThe best way to get new media types included in this library is to register\r\nthem with the IANA. The community registration procedure is outlined in\r\n[RFC 6838 section 5](http://tools.ietf.org/html/rfc6838#section-5). Types\r\nregistered with the IANA are automatically pulled into this library.\r\n\r\n[npm-version-image]: https://img.shields.io/npm/v/mime-db.svg\r\n[npm-downloads-image]: https://img.shields.io/npm/dm/mime-db.svg\r\n[npm-url]: https://npmjs.org/package/mime-db\r\n[travis-image]: https://img.shields.io/travis/jshttp/mime-db/master.svg\r\n[travis-url]: https://travis-ci.org/jshttp/mime-db\r\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/mime-db/master.svg\r\n[coveralls-url]: https://coveralls.io/r/jshttp/mime-db?branch=master\r\n[node-image]: https://img.shields.io/node/v/mime-db.svg\r\n[node-url]: http://nodejs.org/download/\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/mime-db.git"
  },
  "scripts": {
    "build": "node scripts/build",
    "fetch": "gnode scripts/fetch-apache && gnode scripts/fetch-iana && gnode scripts/fetch-nginx",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
    "update": "npm run fetch && npm run build"
  },
  "version": "1.24.0"
}
