{
  "_from": "end-of-stream@1.0.0",
  "_id": "end-of-stream@1.0.0",
  "_location": "/end-of-stream",
  "_npmUser": {
    "name": "mafintosh",
    "email": "mathiasbuus@gmail.com"
  },
  "_npmVersion": "1.4.9",
  "_phantomChildren": {},
  "_requiredBy": [
    "/duplexify"
  ],
  "_resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.0.0.tgz",
  "_shasum": "d4596e702734a93e40e9af864319eabd99ff2f0e",
  "author": {
    "name": "Mathias Buus",
    "email": "mathiasbuus@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/end-of-stream/issues"
  },
  "dependencies": {
    "once": "~1.3.0"
  },
  "description": "Call a callback when a readable/writable/duplex stream has completed or failed.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "d4596e702734a93e40e9af864319eabd99ff2f0e",
    "tarball": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.0.0.tgz"
  },
  "homepage": "https://github.com/mafintosh/end-of-stream",
  "keywords": [
    "stream",
    "streams",
    "callback",
    "finish",
    "close",
    "end",
    "wait"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    }
  ],
  "name": "end-of-stream",
  "optionalDependencies": {},
  "readme": "# end-of-stream\r\n\r\nA node module that calls a callback when a readable/writable/duplex stream has completed or failed.\r\n\r\n\tnpm install end-of-stream\r\n\r\n## Usage\r\n\r\nSimply pass a stream and a callback to the `eos`.\r\nBoth legacy streams and streams2 are supported.\r\n\r\n``` js\r\nvar eos = require('end-of-stream');\r\n\r\neos(readableStream, function(err) {\r\n\tif (err) return console.log('stream had an error or closed early');\r\n\tconsole.log('stream has ended');\r\n});\r\n\r\neos(writableStream, function(err) {\r\n\tif (err) return console.log('stream had an error or closed early');\r\n\tconsole.log('stream has finished');\r\n});\r\n\r\neos(duplexStream, function(err) {\r\n\tif (err) return console.log('stream had an error or closed early');\r\n\tconsole.log('stream has ended and finished');\r\n});\r\n\r\neos(duplexStream, {readable:false}, function(err) {\r\n\tif (err) return console.log('stream had an error or closed early');\r\n\tconsole.log('stream has ended but might still be writable');\r\n});\r\n\r\neos(duplexStream, {writable:false}, function(err) {\r\n\tif (err) return console.log('stream had an error or closed early');\r\n\tconsole.log('stream has ended but might still be readable');\r\n});\r\n\r\neos(readableStream, {error:false}, function(err) {\r\n\t// do not treat emit('error', err) as a end-of-stream\r\n});\r\n```\r\n\r\n## License\r\n\r\nMIT",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/end-of-stream.git"
  },
  "scripts": {
    "test": "node test.js"
  },
  "version": "1.0.0"
}
