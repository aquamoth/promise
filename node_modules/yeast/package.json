{
  "_from": "yeast@0.1.2",
  "_id": "yeast@0.1.2",
  "_location": "/yeast",
  "_nodeVersion": "0.12.3",
  "_npmUser": {
    "name": "3rdeden",
    "email": "npm@3rd-Eden.com"
  },
  "_npmVersion": "2.9.1",
  "_phantomChildren": {},
  "_requiredBy": [
    "/engine.io-client"
  ],
  "_resolved": "https://registry.npmjs.org/yeast/-/yeast-0.1.2.tgz",
  "_shasum": "008e06d8094320c372dbc2f8ed76a0ca6c8ac419",
  "author": {
    "name": "Arnout Kazemier"
  },
  "bugs": {
    "url": "https://github.com/unshiftio/yeast/issues"
  },
  "dependencies": {},
  "description": "Tiny but linear growing unique id generator",
  "devDependencies": {
    "assume": "1.3.x",
    "istanbul": "0.3.x",
    "mocha": "2.3.x",
    "pre-commit": "1.1.x",
    "zuul": "3.4.x"
  },
  "directories": {},
  "dist": {
    "shasum": "008e06d8094320c372dbc2f8ed76a0ca6c8ac419",
    "tarball": "https://registry.npmjs.org/yeast/-/yeast-0.1.2.tgz"
  },
  "gitHead": "5a7300f934302009aa8733fa84d43cc570756b98",
  "homepage": "https://github.com/unshiftio/yeast",
  "keywords": [
    "yeast",
    "id",
    "generator",
    "unique"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "unshift",
      "email": "npm@unshift.io"
    },
    {
      "name": "3rdeden",
      "email": "npm@3rd-Eden.com"
    }
  ],
  "name": "yeast",
  "optionalDependencies": {},
  "readme": "# yeast\r\n\r\n[![Made by unshift](https://img.shields.io/badge/made%20by-unshift-00ffcc.svg?style=flat-square)](http://unshift.io)[![Version npm](https://img.shields.io/npm/v/yeast.svg?style=flat-square)](http://browsenpm.org/package/yeast)[![Build Status](https://img.shields.io/travis/unshiftio/yeast/master.svg?style=flat-square)](https://travis-ci.org/unshiftio/yeast)[![Dependencies](https://img.shields.io/david/unshiftio/yeast.svg?style=flat-square)](https://david-dm.org/unshiftio/yeast)[![Coverage Status](https://img.shields.io/coveralls/unshiftio/yeast/master.svg?style=flat-square)](https://coveralls.io/r/unshiftio/yeast?branch=master)[![IRC channel](https://img.shields.io/badge/IRC-irc.freenode.net%23unshift-00a8ff.svg?style=flat-square)](https://webchat.freenode.net/?channels=unshift)\r\n\r\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/yeast.svg)](https://saucelabs.com/u/yeast)\r\n\r\nYeast is a unique id generator. It has been primarily designed to generate a\r\nunique id which can be used for cache busting. A common practice for this is\r\nto use a timestamp, but there are couple of downsides when using timestamps.\r\n\r\n1. The timestamp is already 13 chars long. This might not matter for 1 request\r\n   but if you make hundreds of them this quickly adds up in bandwidth and\r\n   processing time.\r\n2. It's not unique enough. If you generate two stamps right after each other,\r\n   they would be identical because the timing accuracy is limited to\r\n   milliseconds.\r\n\r\nYeast solves both of these issues by:\r\n\r\n1. Compressing the generated timestamp using a custom `encode()` function that\r\n   returns a string representation of the number.\r\n2. Seeding the id in case of collision (when the id is identical to the previous\r\n   one).\r\n\r\nTo keep the strings unique it will use the `.` char to separate the generated\r\nstamp from the seed.\r\n\r\n## Installation\r\n\r\nThe module is intended to be used in browsers as well as in Node.js and is\r\ntherefore released in the npm registry and can be installed using:\r\n\r\n```\r\nnpm install --save yeast\r\n```\r\n\r\n## Usage\r\n\r\nAll the examples assume that this library is initialized as follow:\r\n\r\n```js\r\n'use strict';\r\n\r\nvar yeast = require('yeast');\r\n```\r\n\r\nTo generate an id just call the `yeast` function.\r\n\r\n```js\r\nconsole.log(yeast(), yeast(), yeast()); // outputs: KyxidwN KyxidwN.0 KyxidwN.1\r\n\r\nsetTimeout(function () {\r\n  console.log(yeast()); // outputs: KyxidwO\r\n});\r\n```\r\n\r\n### yeast.encode(num)\r\n\r\nAn helper function that returns a string representing the specified number. The\r\nreturned string contains only URL safe characters.\r\n\r\n```js\r\nyeast.encode(+new Date()); // outputs: Kyxjuo1\r\n```\r\n\r\n### yeast.decode(str)\r\n\r\nAn helper function that returns the integer value specified by the given string.\r\nThis function can be used to retrieve the timestamp from a `yeast` id.\r\n\r\n```js\r\nvar id = yeast(); // holds the value: Kyxl1OU\r\n\r\nyeast.decode(id); // outputs: 1439816226334\r\n```\r\n\r\nThat's all folks. If you have ideas on how we can further compress the ids\r\nplease open an issue!\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/unshiftio/yeast.git"
  },
  "scripts": {
    "100%": "istanbul check-coverage --statements 100 --functions 100 --lines 100 --branches 100",
    "coverage": "istanbul cover _mocha -- test.js",
    "test": "mocha test.js",
    "test-browser": "zuul -- test.js",
    "test-node": "istanbul cover _mocha --report lcovonly -- test.js",
    "watch": "mocha --watch test.js"
  },
  "version": "0.1.2"
}
